openapi: 3.0.2
info:
  title: Participant List Service API
  version: '1.0'
  description: TBD
  license:
    name: TBD
    url: TBD
servers:
  - url: /
paths:
  '/services/{ServiceType}':
    parameters:
      - name: ServiceType
        in: path
        required: true
        schema:
          type: string
        description: 'The type of the service identifier. For example, `THIRD_PARTY_DFSP`'
      - name: Date
        in: header
        schema:
          type: string
        required: true
        description: The `Date` header field indicates the date when the request was sent.
      - name: X-Forwarded-For
        in: header
        schema:
          type: string
        required: false
        description: |-
          The `X-Forwarded-For` header field is an unofficially accepted standard used for informational purposes of the originating client IP address, as a request might pass multiple proxies, firewalls, and so on. Multiple `X-Forwarded-For` values should be expected and supported by implementers of the API.

          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC 7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC 7239 is less-used and supported than `X-Forwarded-For`.
      - name: FSPIOP-Source
        in: header
        schema:
          type: string
        required: true
        description: The `FSPIOP-Source` header field is a non-HTTP standard field used by the API for identifying the sender of the HTTP request. The field should be set by the original sender of the request. Required for routing and signature verification (see header field `FSPIOP-Signature`).
      - name: FSPIOP-Destination
        in: header
        schema:
          type: string
        required: false
        description: 'The `FSPIOP-Destination` header field is a non-HTTP standard field used by the API for HTTP header based routing of requests and responses to the destination. The field must be set by the original sender of the request if the destination is known (valid for all services except GET /parties) so that any entities between the client and the server do not need to parse the payload for routing purposes. If the destination is not known (valid for service GET /parties), the field should be left empty.'
      - name: FSPIOP-Encryption
        in: header
        schema:
          type: string
        required: false
        description: The `FSPIOP-Encryption` header field is a non-HTTP standard field used by the API for applying end-to-end encryption of the request.
      - name: FSPIOP-Signature
        in: header
        schema:
          type: string
        required: false
        description: The `FSPIOP-Signature` header field is a non-HTTP standard field used by the API for applying an end-to-end request signature.
      - name: FSPIOP-URI
        in: header
        schema:
          type: string
        required: false
        description: 'The `FSPIOP-URI` header field is a non-HTTP standard field used by the API for signature verification, should contain the service URI. Required if signature verification is used, for more information, see [the API Signature document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).'
      - name: FSPIOP-HTTP-Method
        in: header
        schema:
          type: string
        required: false
        description: 'The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field used by the API for signature verification, should contain the service HTTP method. Required if signature verification is used, for more information, see [the API Signature document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).'
    get:
      operationId: GetServicesByServiceType
      summary: GetServicesByServiceType
      description: |
        The HTTP request `GET /services/{ServiceType}` is used to retrieve the list of participants
        that support a specified service.
      parameters:
        - name: Accept
          in: header
          required: true
          schema:
            type: string
          description: The `Accept` header field indicates the version of the API the client would like the server to use.
      tags:
        - services
        - sampled
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: ErrorInformationResponse
                type: object
                description: Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses.
                properties:
                  errorInformation:
                    $ref: '#/paths/~1services~1%7BServiceType%7D~1error/put/requestBody/content/application~1json/schema/properties/errorInformation'
          headers:
            Content-Length:
              required: false
              schema:
                type: integer
              description: |-
                The `Content-Length` header field indicates the anticipated size of the payload body. Only sent if there is a body.

                **Note:** The API supports a maximum size of 5242880 bytes (5 Megabytes).
            Content-Type:
              schema:
                type: string
              required: true
              description: The `Content-Type` header indicates the specific version of the API used to send the payload body.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/400/content/application~1json/schema'
          headers:
            Content-Length:
              $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/400/headers/Content-Length'
            Content-Type:
              $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/400/headers/Content-Type'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/400/content/application~1json/schema'
          headers:
            Content-Length:
              $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/400/headers/Content-Length'
            Content-Type:
              $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/400/headers/Content-Type'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/400/content/application~1json/schema'
          headers:
            Content-Length:
              $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/400/headers/Content-Length'
            Content-Type:
              $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/400/headers/Content-Type'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/400/content/application~1json/schema'
          headers:
            Content-Length:
              $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/400/headers/Content-Length'
            Content-Type:
              $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/400/headers/Content-Type'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/400/content/application~1json/schema'
          headers:
            Content-Length:
              $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/400/headers/Content-Length'
            Content-Type:
              $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/400/headers/Content-Type'
        '501':
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/400/content/application~1json/schema'
          headers:
            Content-Length:
              $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/400/headers/Content-Length'
            Content-Type:
              $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/400/headers/Content-Type'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/400/content/application~1json/schema'
          headers:
            Content-Length:
              $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/400/headers/Content-Length'
            Content-Type:
              $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/400/headers/Content-Type'
    put:
      description: |
        The HTTP request `PUT /services/{ServiceType}` is used to return list of participants
        that support a specified service.
      operationId: PutServicesByServiceType
      summary: PutServicesByServiceType
      tags:
        - services
        - sampled
      parameters:
        - $ref: '#/paths/~1services~1%7BServiceType%7D~1error/parameters/1'
        - $ref: '#/paths/~1services~1%7BServiceType%7D~1error/parameters/2'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: ServicesServiceTypePutResponse
              type: object
              description: 'The object sent in a `PUT /services/{ServiceType}` request.'
              properties:
                providers:
                  type: array
                  items:
                    title: FspId
                    type: string
                    minLength: 1
                    maxLength: 32
                    description: FSP identifier.
              required:
                - providers
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/400'
        '401':
          $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/401'
        '403':
          $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/403'
        '404':
          $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/404'
        '405':
          $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/405'
        '406':
          $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/406'
        '501':
          $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/501'
        '503':
          $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/503'
  '/services/{ServiceType}/error':
    parameters:
      - $ref: '#/paths/~1services~1%7BServiceType%7D/parameters/0'
      - name: Content-Length
        in: header
        required: false
        schema:
          type: integer
        description: |-
          The `Content-Length` header field indicates the anticipated size of the payload body. Only sent if there is a body.

          **Note:** The API supports a maximum size of 5242880 bytes (5 Megabytes).
      - name: Content-Type
        in: header
        schema:
          type: string
        required: true
        description: The `Content-Type` header indicates the specific version of the API used to send the payload body.
      - $ref: '#/paths/~1services~1%7BServiceType%7D/parameters/1'
      - $ref: '#/paths/~1services~1%7BServiceType%7D/parameters/2'
      - $ref: '#/paths/~1services~1%7BServiceType%7D/parameters/3'
      - $ref: '#/paths/~1services~1%7BServiceType%7D/parameters/4'
      - $ref: '#/paths/~1services~1%7BServiceType%7D/parameters/5'
      - $ref: '#/paths/~1services~1%7BServiceType%7D/parameters/6'
      - $ref: '#/paths/~1services~1%7BServiceType%7D/parameters/7'
      - $ref: '#/paths/~1services~1%7BServiceType%7D/parameters/8'
    put:
      description: |
        The HTTP request `PUT /services/{ServiceType}/error` is used to return error information
      operationId: PutServicesByServiceTypeAndError
      summary: PutServicesByServiceTypeAndError
      tags:
        - services
        - sampled
      requestBody:
        description: Details of the error returned.
        required: true
        content:
          application/json:
            schema:
              title: ErrorInformationObject
              type: object
              description: Data model for the complex type object that contains ErrorInformation.
              properties:
                errorInformation:
                  title: ErrorInformation
                  type: object
                  description: Data model for the complex type ErrorInformation.
                  properties:
                    errorCode:
                      title: ErrorCode
                      type: string
                      pattern: '^[1-9]\d{3}$'
                      description: 'The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error.'
                      example: '5100'
                    errorDescription:
                      title: ErrorDescription
                      type: string
                      minLength: 1
                      maxLength: 128
                      description: Error description string.
                    extensionList:
                      title: ExtensionList
                      type: object
                      description: 'Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.'
                      properties:
                        extension:
                          type: array
                          items:
                            title: Extension
                            type: object
                            description: Data model for the complex type Extension.
                            properties:
                              key:
                                title: ExtensionKey
                                type: string
                                minLength: 1
                                maxLength: 32
                                description: Extension key.
                              value:
                                title: ExtensionValue
                                type: string
                                minLength: 1
                                maxLength: 128
                                description: Extension value.
                            required:
                              - key
                              - value
                          minItems: 1
                          maxItems: 16
                          description: Number of Extension elements.
                      required:
                        - extension
                  required:
                    - errorCode
                    - errorDescription
              required:
                - errorInformation
      responses:
        '200':
          $ref: '#/paths/~1services~1%7BServiceType%7D/put/responses/200'
        '400':
          $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/400'
        '401':
          $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/401'
        '403':
          $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/403'
        '404':
          $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/404'
        '405':
          $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/405'
        '406':
          $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/406'
        '501':
          $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/501'
        '503':
          $ref: '#/paths/~1services~1%7BServiceType%7D/get/responses/503'
