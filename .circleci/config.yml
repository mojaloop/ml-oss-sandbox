# CircleCI v2.1 Config
version: 2.1

##
# orbs
#
# Orbs used in this pipeline
###
orbs:
  anchore: anchore/anchore-engine@1.6.0
  slack: circleci/slack@3.4.2

##
# defaults
#
# YAML defaults templates, in alphabetical order
##
defaults_Dependencies: &defaults_Dependencies |
  apk --no-cache add git ca-certificates curl openssh-client bash
  apk add --no-cache -t build-dependencies make gcc g++ python libtool autoconf automake jq
  npm config set unsafe-perm true
  npm install -g node-gyp
  # add github to known hosts
  mkdir -p ~/.ssh/
  ssh-keyscan github.com >> ~/.ssh/known_hosts
  # set up destination dirs
  mkdir -p /tmp/repos
  mkdir -p /tmp/results

defaults_awsCliDependencies: &defaults_awsCliDependencies |
  apk upgrade --no-cache
  apk --no-cache add \
          python3 \
          py3-pip \
          groff \
          less \
          mailcap
  pip3 install --upgrade pip awscli==1.14.5 s3cmd==2.0.1 python-magic

##
# Executors
#
# CircleCI Executors
##
executors:
  default-docker:
    working_directory: /home/circleci/project/
    docker:
      - image: node:12.16.0-alpine

  default-machine:
    machine:
      image: ubuntu-1604:201903-01

##
# Jobs
#
# A map of CircleCI jobs
##
jobs:
  setup:
    executor: default-docker
    steps:
      - checkout
      - run:
          name: Install general dependencies
          command: *defaults_Dependencies
      - run:
          name: Access npm folder as root
          command: cd $(npm root -g)/npm
      - run:
          name: Update NPM install
          command: npm ci
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

  regression-test:
    executor: default-docker
    steps:
      - checkout
      - run:
          name: Install general dependencies
          command: *defaults_Dependencies
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: run regression tests
          command: make test-regression
      - slack/status:
          fail_only: false
          webhook: "$SLACK_WEBHOOK_ANNOUNCEMENT_CI_CD"
          failure_message: ':red_circle: ${CIRCLE_PROJECT_REPONAME}regression tests failed'
          success_message: ':tada: ${CIRCLE_PROJECT_REPONAME}regression tests pased'

  health-checks:
    executor: default-docker
    steps:
      - checkout
      - run:
          name: Install general dependencies
          command: *defaults_Dependencies
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: run health checks
          command: make health-check
      - slack/status:
          fail_only: false
          webhook: "$SLACK_WEBHOOK_ANNOUNCEMENT_CI_CD"
          failure_message: ':red_circle: ${CIRCLE_PROJECT_REPONAME} health checks failed'
          success_message: ':tada: ${CIRCLE_PROJECT_REPONAME} health tests pased'


##
# Workflows
#
# CircleCI Workflow config
##
workflows:
  version: 2
  run_hourly:
    triggers:
      - schedule:
          cron: "0 0-23 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - setup:
          context: org-global
      - regression-test:
          context: org-global
          requires:
            - setup
      - health-checks:
          context: org-global
          requires:
            - setup

  run_on_commit:
    jobs:
      - setup:
          context: org-global
      - regression-test:
          context: org-global
          requires:
            - setup
      - health-checks:
          context: org-global
          requires:
            - setup
          
          